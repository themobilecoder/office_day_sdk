// Mocks generated by Mockito 5.4.5 from annotations
// in office_day_sdk/test/office_day_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:office_day_sdk/src/datasource/office_day_local_data_source.dart'
    as _i2;
import 'package:office_day_sdk/src/model/office_day.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [OfficeDayLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockOfficeDayLocalDataSource extends _i1.Mock
    implements _i2.OfficeDayLocalDataSource {
  @override
  _i3.Stream<List<_i4.OfficeDay>> get officeDaysStream =>
      (super.noSuchMethod(
            Invocation.getter(#officeDaysStream),
            returnValue: _i3.Stream<List<_i4.OfficeDay>>.empty(),
            returnValueForMissingStub: _i3.Stream<List<_i4.OfficeDay>>.empty(),
          )
          as _i3.Stream<List<_i4.OfficeDay>>);

  @override
  List<_i4.OfficeDay> get officeDays =>
      (super.noSuchMethod(
            Invocation.getter(#officeDays),
            returnValue: <_i4.OfficeDay>[],
            returnValueForMissingStub: <_i4.OfficeDay>[],
          )
          as List<_i4.OfficeDay>);

  @override
  bool addOrUpdate(_i4.OfficeDay? officeDay) =>
      (super.noSuchMethod(
            Invocation.method(#addOrUpdate, [officeDay]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  void addAllOrUpdateAll(List<_i4.OfficeDay>? officeDays) => super.noSuchMethod(
    Invocation.method(#addAllOrUpdateAll, [officeDays]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
